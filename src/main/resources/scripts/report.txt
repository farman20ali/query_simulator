--not yet decided

CREATE TABLE IF NOT EXISTS ambulance (
    ambulance_id SERIAL PRIMARY KEY,
    vehicle_number VARCHAR(50) UNIQUE NOT NULL,
    driver_id INT REFERENCES users(user_id),
    status VARCHAR(20) DEFAULT 'available' CHECK (status IN ('available', 'on_duty', 'maintenance')),
    organizations_id INT REFERENCES organizations(id)
);



CREATE TABLE IF NOT EXISTS accident_reports (
    report_id SERIAL PRIMARY KEY,
    latitude DECIMAL(9,6) NOT NULL,
    longitude DECIMAL(9,6) NOT NULL,
    location VARCHAR(255) NOT NULL,
    vehicle_involved_id INT REFERENCES vehicle_involved(vehicle_id),
    patient_victim_id INT REFERENCES patient_victim(victim_id),
    accident_type_id INT REFERENCES accident_types(accident_type_id),
    user_id INT REFERENCES users(user_id),
    cause TEXT,
    num_affecties INT,
    age INT,
    gender VARCHAR(10) CHECK (gender IN ('male', 'female', 'other')),
    image_uri TEXT,
    audio_uri TEXT,
    status VARCHAR(50) DEFAULT 'pending',
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);




CREATE TABLE IF NOT EXISTS dispatch (
    dispatch_id SERIAL PRIMARY KEY,
    report_id INT REFERENCES accident_reports(report_id) ON DELETE CASCADE,
    ambulance_id INT REFERENCES ambulance(ambulance_id),
    assigned_by INT REFERENCES users(user_id),
    pickup_time TIMESTAMP,
    dropoff_time TIMESTAMP,
    hospital_id INT REFERENCES hospital(hospital_id),
    status VARCHAR(50) DEFAULT 'assigned' CHECK (status IN ('assigned', 'en_route', 'dropped_at_hospital'))
); 

CREATE TABLE IF NOT EXISTS accident_report_status_log (
    log_id SERIAL PRIMARY KEY,
    report_id INT REFERENCES accident_reports(report_id) ON DELETE CASCADE,
    status VARCHAR(50) NOT NULL CHECK (status IN ('pending', 'ambulance_assigned', 'picked_up', 'dropped_at_hospital')),
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS accident_report_audit_log (
    log_id SERIAL PRIMARY KEY,
    report_id INT REFERENCES accident_reports(report_id) ON DELETE CASCADE,
    modified_by INT REFERENCES users(user_id),
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_fields TEXT  -- stores a description of modified fields
);



CREATE TABLE IF NOT EXISTS ambulance_reservations (
    reservation_id SERIAL PRIMARY KEY,
    ambulance_id INT REFERENCES ambulance(ambulance_id),
    report_id INT REFERENCES accident_reports(report_id) ON DELETE CASCADE,
    reserved_by INT REFERENCES users(user_id),
    reservation_start TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    reservation_end TIMESTAMP,
    status VARCHAR(20) DEFAULT 'reserved' CHECK (status IN ('reserved', 'completed', 'canceled'))
);




